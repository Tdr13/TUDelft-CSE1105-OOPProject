package commons;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class ListingTest {

    Listing listing;
    Board board;

    @BeforeEach
    void setUp() {
        this.board = new Board("board","accessKey","password");
        this.listing = new Listing("list",board);
    }

    @Test
    void getListId() { // the id is autogenerated
    }

    @Test
    void setListId() {
        listing.setListId(1234);
        assertEquals(1234, listing.getListId());
    }

    @Test
    void getTitle() {
        assertEquals("list", listing.getTitle());
    }

    @Test
    void setTitle() {
        listing.setTitle("list2");
        assertEquals("list2", listing.getTitle());
    }

    @Test
    void getCards() {
        List<Card> cards = new ArrayList<>();
        assertEquals(cards,listing.getCards());
    }

    @Test
    public void testAddCard() {
        Card card = new Card("desc","name", new Date(), new ArrayList<>(), new ArrayList<>(), listing,"","","");
        listing.getCards().add(card);
        assertEquals(1, listing.getCards().size());
        assertTrue(listing.getCards().contains(card));
    }

    @Test
    void getBoard() {
        assertEquals(board,listing.getBoard());
    }

    @Test
    void setBoard() {
        Board newBoard = new Board("board2","accessKey","password");
        listing.setBoard(newBoard);
        assertEquals(newBoard, listing.getBoard());
    }

    @Test
    void testEquals() {
        Board board2 = new Board("board","accessKey","password");
        Listing listing2 = new Listing("list",board2);

        assertEquals(listing, listing2);
    }
    @Test
    void testNotEquals() {
        Board board2 = new Board("board","accessKey","password");
        Listing listing2 = new Listing("list2",board2);

        assertNotEquals(listing, listing2);
    }

    @Test
    void testNotEqualsDifferentCards() {
        Card card = new Card("desc","name", new Date(), new ArrayList<>(), new ArrayList<>(), listing,"","","");
        listing.getCards().add(card);

        Board board2 = new Board("board2","accessKey","password");
        Listing listing2 = new Listing("list",board2);

        Card card2 = new Card("desc2","name", new Date(), new ArrayList<>(), new ArrayList<>(), listing,"","","");
        listing2.getCards().add(card2);

        assertNotEquals(listing, listing2);

        listing2.getCards().add(card);

        assertNotEquals(listing, listing2);
    }

    @Test
    void testHashCode() {
        Board board2 = new Board("board","accessKey","password");
        Listing listing2 = new Listing("list",board2);

        assertEquals(listing.hashCode(),listing2.hashCode());
    }
}