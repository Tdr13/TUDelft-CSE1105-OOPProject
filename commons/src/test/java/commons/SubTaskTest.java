package commons;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class SubTaskTest {

    SubTask subtask;
    Card card;

    @BeforeEach
    void setUp() {
        List<Tag> tags = new ArrayList<>();
        tags.add(new Tag("tag1"));

        Board board = new Board("title","acceskey","password");
        Listing listing = new Listing("list",board);

        card = new Card("desc","name",new Date(),tags,new ArrayList<>(),listing);
        subtask = new SubTask("subtask",card);
    }

    @Test
    void getStId() { // the id is autogenerated
    }

    @Test
    void getTitle() {
        assertEquals("subtask",subtask.getTitle());
    }

    @Test
    void setTitle() {
        subtask.setTitle("subtask2");
        assertEquals("subtask2",subtask.getTitle());
    }

    @Test
    void isDone() {
        assertFalse(subtask.isDone());
    }

    @Test
    void setDone() {
        subtask.setDone(true);
        assertTrue(subtask.isDone());
    }

    @Test
    void getCard() {
        assertEquals(card, subtask.getCard());
    }

    @Test
    void setCard() {
        Card card2 = new Card("desc","name2",new Date(),null,null,null);
        subtask.setCard(card2);
        assertEquals(card2, subtask.getCard());
    }

    @Test
    void testEquals() {
        List<Tag> tags = new ArrayList<>();
        tags.add(new Tag("tag1"));

        Board board = new Board("title","acceskey","password");
        Listing listing = new Listing("list",board);

        Card card2 = new Card("desc","name",new Date(),tags,new ArrayList<>(),listing);
        SubTask subtask2 = new SubTask("subtask",card2);

        assertTrue(subtask.equals(subtask2));
    }

    @Test
    void testHashCode() {
        List<Tag> tags = new ArrayList<>();
        tags.add(new Tag("tag1"));

        Board board = new Board("title","acceskey","password");
        Listing listing = new Listing("list",board);

        Card card2 = new Card("desc","name",new Date(),tags,new ArrayList<>(),listing);
        SubTask subtask2 = new SubTask("subtask",card2);

        assertEquals(subtask.hashCode(),subtask2.hashCode());
    }
}