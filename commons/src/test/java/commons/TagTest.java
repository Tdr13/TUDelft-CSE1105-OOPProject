package commons;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class TagTest {

    Tag tag;
    Board board;
    Tag tagWithBoard;

    @BeforeEach
    void setUp() {
        this.tag = new Tag("tag");
        this.tag.setColor("red");
        this.board = new Board("board","accessKey","password");
        this.tagWithBoard = new Tag("tag", board);
    }

    @Test
    void testDefaultConstructor() {
        tag = new Tag();
        assertNotNull(tag);
    }

    @Test
    void getTagId() { // the id is autogenerated
    }

    @Test
    void setTagId() {
        tag.setTagId(123);
        assertEquals(123, tag.getTagId());
    }

    @Test
    void getTitle() {
        assertEquals("tag",tag.getTitle());
    }

    @Test
    void setTitle() {
        tag.setTitle("tag2");
        assertEquals("tag2",tag.getTitle());
    }

    @Test
    void getCards() {
        List<Card> cards = new ArrayList<>();
        assertEquals(cards,tag.getCards());
    }

    @Test
    void setCards() {
        List<Card> cards = new ArrayList<>();
        Board board = new Board("board","accessKey","password");
        Listing listing = new Listing("title", board);
        Card card1 = new Card("desc","name",new Date(),new ArrayList<>(),new ArrayList<>(),listing,"","","");
        cards.add(card1);

        Card card2 = new Card("desc","name2",new Date(),new ArrayList<>(),new ArrayList<>(),listing,"","","");
        cards.add(card2);

        tag.setCards(cards);
        assertEquals(cards,tag.getCards());
    }
    @Test
    void getColor() {
        assertEquals("red", tag.getColor());
    }

    @Test
    void setColor() {
        tag.setColor("blue");
        assertEquals("blue", tag.getColor());
    }

    @Test
    void getBoard() {
        Board newBoard = new Board("board","accessKey","password");
        assertEquals(newBoard, tagWithBoard.getBoard());
    }

    @Test
    void setBoard() {
        Board newBoard = new Board("board2","accessKey","password");
        tagWithBoard.setBoard(newBoard);
        assertEquals(newBoard, tagWithBoard.getBoard());
    }

    @Test
    void removeTagFromCards() {
        List<Card> cards = new ArrayList<>();
        Board board = new Board("board","accessKey","password");
        Listing listing = new Listing("title", board);
        Card card1 = new Card("desc","name",new Date(),new ArrayList<>(),new ArrayList<>(), listing,"","","");
        cards.add(card1);
        List<Tag> tags = new ArrayList<>();
        tags.add(tag);
        card1.setTags(tags);

        tag.setCards(cards);
        tag.removeTagFromCards();
        List<Tag> newTags = new ArrayList<>();
        assertEquals(newTags, card1.getTags());
    }

    @Test
    void testNotEquals() {
        Tag tag2 = new Tag("tag2");
        assertNotEquals(tag, tag2);
    }

    @Test
    void testEquals() {
        Tag tag2 = new Tag("tag");
        assertEquals(tag, tag2);
    }

    @Test
    void testHashCode() {
        Tag tag2 = new Tag("tag");
        assertEquals(tag.hashCode(),tag2.hashCode());
    }
}